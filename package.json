{
  "name": "countr-desktop",
  "productName": "Countr-Desktop",
  "version": "4.0.1",
  "description": "Countr Desktop POS Retails Solution",
  "scripts": {
    "dist": "npm run build && build --publish onTagOrDraft",
    "build": "concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --color",
    "build-e2e": "cross-env E2E_BUILD=true yarn build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --color",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --color",
    "dev": "cp usb.js node_modules/escpos/adapter/usb.js && cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "lint": "cross-env NODE_ENV=development eslint --cache --format=pretty .",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build --publish always",
    "package-all": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build -mwl",
    "package-linux": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build --linux --x64",
    "package-pi": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build --publish always --linux --arm64",
    "package-win": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build --win --x64",
    "package-win-32": "cp usb.js node_modules/escpos/adapter/usb.js && yarn build && electron-builder build --win --ia32",
    "postinstall": "electron-builder install-app-deps",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{*{js,jsx,json},babelrc,eslintrc,prettierrc,stylelintrc}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "precommit": "lint-staged",
    "prestart": "yarn build",
    "start": "cross-env NODE_ENV=production DEBUG_PROD=true electron ./app/main.prod.js",
    "start-main-dev": "cross-env HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev.js",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn lint && yarn build && yarn test && yarn build-e2e && yarn test-e2e",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe electron:./ ./test/e2e/HomePage.e2e.js",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe-live electron:./ ./test/e2e/HomePage.e2e.js",
    "test-watch": "yarn test --watch"
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{yml,md}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "prettier": {
    "trailingComma": "es5",
    "semi": false,
    "singleQuote": true
  },
  "main": "./app/main.prod.js",
  "build": {
    "buildDependenciesFromSource": true,
    "productName": "Countr-Desktop",
    "appId": "com.en.countr.desktop",
    "files": [
      "app/img/",
      "app/dist/",
      "app/app.html",
      "app/main.prod.js",
      "app/main.prod.js.map"
    ],
    "mac": {
      "target": [
        "dmg",
        "zip"
      ],
      "category": "public.app-category.office",
      "type": "distribution",
      "icon": "./icon.icns",
      "publish": [
        {
          "provider": "generic",
          "url": "https://countr-desktop-updater-staging.herokuapp.com"
        }
      ]
    },
    "dmg": {
      "publish": [
        {
          "provider": "generic",
          "url": "https://countr-desktop-updater-staging.herokuapp.com"
        }
      ],
      "title": "${productName} ${version}",
      "icon": "./icon.icns",
      "internetEnabled": false,
      "sign": true,
      "background": "./install-countr.png",
      "window": {
        "width": 650,
        "height": 400
      },
      "contents": [
        {
          "x": 30,
          "y": 80
        },
        {
          "x": 30,
          "y": 240,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ],
      "publish": [
        {
          "provider": "generic",
          "url": "https://countr-desktop-updater-staging.herokuapp.com"
        }
      ]
    },
    "snap": {
      "title": "Countr Desktop Container",
      "confinement": "classic"
    },
    "linux": {
      "target": [
        "deb",
        "snap"
      ],
      "publish": [
        {
          "provider": "generic",
          "url": "https://countr-desktop-updater-staging.herokuapp.com"
        }
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    }
  },
  "author": {
    "name": "Countr",
    "email": "dev@countrhq.com",
    "url": "https://countrhq.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://bitbucket.org/CashOrCard/countr-desktop/issues"
  },
  "keywords": [],
  "homepage": "https://bitbucket.org/CashOrCard/countr-desktop",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json"
    ],
    "transform": {
      "^.+\\.jsx?$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuiltsExist.js"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.12.9",
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-proposal-decorators": "^7.12.1",
    "@babel/plugin-proposal-do-expressions": "^7.12.1",
    "@babel/plugin-proposal-export-default-from": "^7.12.1",
    "@babel/plugin-proposal-export-namespace-from": "^7.12.1",
    "@babel/plugin-proposal-function-bind": "^7.12.1",
    "@babel/plugin-proposal-function-sent": "^7.12.1",
    "@babel/plugin-proposal-json-strings": "^7.12.1",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.12.1",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.12.1",
    "@babel/plugin-proposal-numeric-separator": "^7.12.7",
    "@babel/plugin-proposal-optional-chaining": "^7.12.7",
    "@babel/plugin-proposal-pipeline-operator": "^7.12.1",
    "@babel/plugin-proposal-throw-expressions": "^7.12.1",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-react-constant-elements": "^7.12.1",
    "@babel/plugin-transform-react-inline-elements": "^7.12.1",
    "@babel/preset-env": "^7.12.7",
    "@babel/preset-react": "^7.12.7",
    "@babel/register": "^7.12.1",
    "babel-core": "6.26.3",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "^8.2.2",
    "babel-plugin-dev-expression": "^0.2.2",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^4.1.0",
    "concurrently": "^6.0.1",
    "connected-react-router": "^6.9.1",
    "cross-env": "^7.0.3",
    "cross-spawn": "^7.0.3",
    "css-loader": "^5.2.0",
    "detect-port": "^1.3.0",
    "electron": "12.0.2",
    "electron-builder": "^22.10.5",
    "electron-debug": "^3.2.0",
    "electron-devtools-installer": "^3.1.1",
    "electron-is-dev": "1.2.0",
    "electron-updater": "^4.3.8",
    "electron-util": "^0.15.0",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.6",
    "enzyme-to-json": "^3.6.1",
    "eslint": "^7.23.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-config-prettier": "^8.1.0",
    "eslint-formatter-pretty": "^4.0.0",
    "eslint-import-resolver-webpack": "^0.13.0",
    "eslint-plugin-compat": "^3.9.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.3.4",
    "eslint-plugin-jsx-a11y": "6.4.1",
    "eslint-plugin-promise": "^4.3.1",
    "eslint-plugin-react": "^7.23.1",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^3.0.0",
    "file-loader": "^6.2.0",
    "get-pixels": "*",
    "http-shutdown": "^1.2.2",
    "husky": "^6.0.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^26.6.3",
    "lint-staged": "^10.5.4",
    "mini-css-extract-plugin": "^1.4.0",
    "node-gyp": "^8.0.0",
    "node-sass": "^5.0.0",
    "optimize-css-assets-webpack-plugin": "^5.0.4",
    "prettier": "^2.2.1",
    "qr-image": "*",
    "react-hot-loader": "^4.13.0",
    "react-test-renderer": "^17.0.2",
    "redux-logger": "^3.0.6",
    "rimraf": "^3.0.2",
    "sass-loader": "^11.0.1",
    "serialport": "9.0.7",
    "style-loader": "^2.0.0",
    "stylelint": "^13.12.0",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^21.0.0",
    "terser-webpack-plugin": "^5.1.1",
    "testcafe": "^1.13.0",
    "testcafe-browser-provider-electron": "^0.0.16",
    "testcafe-live": "^0.1.4",
    "testcafe-react-selectors": "^4.1.5",
    "url-loader": "^4.1.1",
    "usb": "1.6.5",
    "webpack": "^5.30.0",
    "webpack-bundle-analyzer": "^4.4.0",
    "webpack-cli": "3.3.12",
    "webpack-dev-server": "^3.11.2",
    "webpack-merge": "^5.7.3",
    "source-map-support": "^0.5.19",
    "yarn": "^1.22.10"
  },
  "optionalDependencies": {
    "node-bluetooth": "*"
  },
  "dependencies": {
    "@countr/sdk": "1.1.105",
    "dotenv": "^8.2.0",
    "escpos": "^2.5.2",
    "history": "4.10.1",
    "i18next": "19.4.4",
    "node-localstorage": "^2.1.6",
    "node-machine-id": "^1.1.12",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-i18next": "^11.8.12",
    "react-redux": "7.2.3",
    "react-router": "^5.2.0",
    "react-router-redux": "^4.0.8",
    "redux": "^4.0.5",
    "redux-thunk": "^2.3.0",
    "ws": "^7.4.4",
    "xmldom": "^0.4.0"
  },
  "devEngines": {
    "node": ">=14.x",
    "yarn": ">=1.22.x"
  },
  "collective": {
    "url": "https://opencollective.com/electron-react-boilerplate-594"
  },
  "browserslist": "electron 12.0.2"
}
